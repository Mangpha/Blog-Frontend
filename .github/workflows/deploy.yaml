name: Blog Front-End deployment

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Deploy
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: ['16.x']

    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache node modules
        id: node-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install Dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: |
          npm i
          npm i -g serverless@2.72.2

      - name: Create local env file
        run: |
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env.local
          cat .env.local
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}

      - name: Create serverless env file
        run: |
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
          cat .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}

      - name: Create serverless.yml
        run: |
          touch serverless.yml
          echo "blogFrontEnd:\n\tcomponent: '@sls-next/serverless-component@latest'\n\tinputs:\n\t\tbucketRegion: ${{ secrets.AWS_REGION }}\n\t\tbucketName: ${{ secrets.AWS_S3_BUCKET_NAME }}\n\t\tname:\n\t\t\tdefaultLambda: DefaultAdminLambda\n\t\t\timageLamgba: ImageAdminLambda\n\t\tcloudfront:\n\t\t\tcomment: 'blog client deploy'\n\t\t\tdistributionId: '${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}'\n\t\taliases: ['mangpha.dev']\n\t\tcertificate:\n\t\t\tcloudFrontDefaultCertificate: false\n\t\t\tacmCertificateArn: '${{ secrets.AWS_ACM_CERTIFICATE_ARN }}'\n\t\t\tminimumProtocolVersion: 'TLSv1.2_2021'" >> serverless.yml
          cat serverless.yml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEPLOY_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEPLOY_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Blog FrontEnd
        run: |
          npm run deploy
